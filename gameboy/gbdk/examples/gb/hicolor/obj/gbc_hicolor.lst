                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.3.2 #14228 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module gbc_hicolor
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _hicolor_palette_isr
                                     12 	.globl _set_bkg_tiles
                                     13 	.globl _set_bkg_data
                                     14 	.globl _set_interrupts
                                     15 	.globl _add_LCD
                                     16 	.globl _remove_LCD
                                     17 	.globl _hicolor_start
                                     18 ;--------------------------------------------------------
                                     19 ; special function registers
                                     20 ;--------------------------------------------------------
                                     21 ;--------------------------------------------------------
                                     22 ; ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area _DATA
                           000000    25 Fgbc_hicolor$SP_SAVE$0_0$0==.
      000000                         26 _SP_SAVE:
      000000                         27 	.ds 2
                           000002    28 Fgbc_hicolor$STAT_SAVE$0_0$0==.
      000002                         29 _STAT_SAVE:
      000002                         30 	.ds 1
                           000003    31 Fgbc_hicolor$p_hicolor_palettes$0_0$0==.
      000003                         32 _p_hicolor_palettes:
      000003                         33 	.ds 2
                           000005    34 Fgbc_hicolor$hicolor_palettes_bank$0_0$0==.
      000005                         35 _hicolor_palettes_bank:
      000005                         36 	.ds 1
                           000006    37 Fgbc_hicolor$hicolor_last_scanline$0_0$0==.
      000006                         38 _hicolor_last_scanline:
      000006                         39 	.ds 1
                                     40 ;--------------------------------------------------------
                                     41 ; ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area _INITIALIZED
                                     44 ;--------------------------------------------------------
                                     45 ; absolute external ram data
                                     46 ;--------------------------------------------------------
                                     47 	.area _DABS (ABS)
                                     48 ;--------------------------------------------------------
                                     49 ; global & static initialisations
                                     50 ;--------------------------------------------------------
                                     51 	.area _HOME
                                     52 	.area _GSINIT
                                     53 	.area _GSFINAL
                                     54 	.area _GSINIT
                                     55 ;--------------------------------------------------------
                                     56 ; Home
                                     57 ;--------------------------------------------------------
                                     58 	.area _HOME
                           000000    59 	G$hicolor_palette_isr$0$0	= .
                                     60 	.globl	G$hicolor_palette_isr$0$0
                           000000    61 	C$gbc_hicolor.c$20$0_0$137	= .
                                     62 	.globl	C$gbc_hicolor.c$20$0_0$137
                                     63 ;src/gbc_hicolor.c:20: void hicolor_palette_isr(void) NONBANKED {
                                     64 ;	---------------------------------
                                     65 ; Function hicolor_palette_isr
                                     66 ; ---------------------------------
      000000                         67 _hicolor_palette_isr::
                           000000    68 	C$gbc_hicolor.c$116$1_0$137	= .
                                     69 	.globl	C$gbc_hicolor.c$116$1_0$137
                                     70 ;src/gbc_hicolor.c:116: __endasm;
      000000 F0r00            [12]   71 	ldh	a, (__current_bank) ; switch ROM bank
      000002 F5               [16]   72 	push	af
      000003 FAr05r00         [16]   73 	ld	a, (_hicolor_palettes_bank)
      000006 B7               [ 4]   74 	or	a
      000007 28 05            [12]   75 	jr	z, 3$
      000009 E0r00            [12]   76 	ldh	(__current_bank), a
      00000B EAr00r00         [16]   77 	ld	(_rROMB0), a
      00000E                         78 3$:
      00000E 08r00r00         [20]   79 	ld	(_SP_SAVE), sp ; save SP
      000011 21r03r00         [12]   80 	ld	hl, #_p_hicolor_palettes ; load address of picture palettes buffer
      000014 2A               [ 8]   81 	ld	a, (hl+)
      000015 56               [ 8]   82 	ld	d, (hl)
      000016 5F               [ 4]   83 	ld	e, a
      000017 F0r00            [12]   84 	ldh	a, (_SCY_REG)
      000019 CB 37            [ 8]   85 	swap	a
      00001B 6F               [ 4]   86 	ld	l, a
      00001C E6 0F            [ 8]   87 	and	#0x0f
      00001E 67               [ 4]   88 	ld	h, a
      00001F 3E F0            [ 8]   89 	ld	a, #0xf0
      000021 A5               [ 4]   90 	and	l
      000022 6F               [ 4]   91 	ld	l, a
      000023 29               [ 8]   92 	add	hl, hl
      000024 19               [ 8]   93 	add	hl, de ; offset address by SCY * (4 * 4 * 2)
      000025 F9               [ 8]   94 	ld	sp, hl
      000026 07               [ 4]   95 	rlca	; compensate odd/even line
      000027 E6 20            [ 8]   96 	and	#0x20 ; if odd then start from 4-th palette; offset == 32
      000029 F6 80            [ 8]   97 	or	#0b10000000 ; set auto-increment
      00002B 21r00r00         [12]   98 	ld	hl, #_BCPS_REG
      00002E 22               [ 8]   99 	ld	(hl+), a ; HL now points to BCPD
      00002F 0E 20            [ 8]  100 	ld	c, #(8 * 4) ; read and set the the colors that come from previous lines
      000031                        101 2$:
      000031 D1               [12]  102 	pop	de
      000032 73               [ 8]  103 	ld	(hl), e
      000033 72               [ 8]  104 	ld	(hl), d
      000034 0D               [ 4]  105 	dec	c
      000035 20 FA            [12]  106 	jr	nz, 2$
      000037                        107 0$:
      000037 F0r00            [12]  108 	ldh	a, (_STAT_REG)
      000039 E6 02            [ 8]  109 	and	#0b00000010
      00003B 28 FA            [12]  110 	jr	z, 0$ ; wait for mode 3
      00003D F0r00            [12]  111 	ldh	a, (_STAT_REG)
      00003F EAr02r00         [16]  112 	ld	(_STAT_SAVE), a
      000042 3E 08            [ 8]  113 	ld	a, #0b00001000
      000044 E0r00            [12]  114 	ldh	(_STAT_REG), a
      000046 AF               [ 4]  115 	xor	a
      000047 E0r00            [12]  116 	ldh	(_IF_REG), a
      000049                        117 1$:
      000049 C1               [12]  118 	pop	bc ; preload the first two colors
      00004A D1               [12]  119 	pop	de
      00004B AF               [ 4]  120 	xor	a
      00004C E0r00            [12]  121 	ldh	(_IF_REG), a
      00004E 76               [ 4]  122 	halt	; wait for mode 0
      00004F 71               [ 8]  123 	ld	(hl), c ; set the first two colors
      000050 70               [ 8]  124 	ld	(hl), b
      000051 73               [ 8]  125 	ld	(hl), e
      000052 72               [ 8]  126 	ld	(hl), d
                                    127 	.rept	(4*4)-2 ; read and set four palettes except the two previously set colors
                                    128 	pop	de
                                    129 	ld	(hl), e
                                    130 	ld	(hl), d
                                    131 	.endm
      000053 D1               [12]    1 	pop	de
      000054 73               [ 8]    2 	ld	(hl), e
      000055 72               [ 8]    3 	ld	(hl), d
      000056 D1               [12]    1 	pop	de
      000057 73               [ 8]    2 	ld	(hl), e
      000058 72               [ 8]    3 	ld	(hl), d
      000059 D1               [12]    1 	pop	de
      00005A 73               [ 8]    2 	ld	(hl), e
      00005B 72               [ 8]    3 	ld	(hl), d
      00005C D1               [12]    1 	pop	de
      00005D 73               [ 8]    2 	ld	(hl), e
      00005E 72               [ 8]    3 	ld	(hl), d
      00005F D1               [12]    1 	pop	de
      000060 73               [ 8]    2 	ld	(hl), e
      000061 72               [ 8]    3 	ld	(hl), d
      000062 D1               [12]    1 	pop	de
      000063 73               [ 8]    2 	ld	(hl), e
      000064 72               [ 8]    3 	ld	(hl), d
      000065 D1               [12]    1 	pop	de
      000066 73               [ 8]    2 	ld	(hl), e
      000067 72               [ 8]    3 	ld	(hl), d
      000068 D1               [12]    1 	pop	de
      000069 73               [ 8]    2 	ld	(hl), e
      00006A 72               [ 8]    3 	ld	(hl), d
      00006B D1               [12]    1 	pop	de
      00006C 73               [ 8]    2 	ld	(hl), e
      00006D 72               [ 8]    3 	ld	(hl), d
      00006E D1               [12]    1 	pop	de
      00006F 73               [ 8]    2 	ld	(hl), e
      000070 72               [ 8]    3 	ld	(hl), d
      000071 D1               [12]    1 	pop	de
      000072 73               [ 8]    2 	ld	(hl), e
      000073 72               [ 8]    3 	ld	(hl), d
      000074 D1               [12]    1 	pop	de
      000075 73               [ 8]    2 	ld	(hl), e
      000076 72               [ 8]    3 	ld	(hl), d
      000077 D1               [12]    1 	pop	de
      000078 73               [ 8]    2 	ld	(hl), e
      000079 72               [ 8]    3 	ld	(hl), d
      00007A D1               [12]    1 	pop	de
      00007B 73               [ 8]    2 	ld	(hl), e
      00007C 72               [ 8]    3 	ld	(hl), d
      00007D FAr06r00         [16]  132 	ld	a, (_hicolor_last_scanline)
      000080 4F               [ 4]  133 	ld	c, a
      000081 F0r00            [12]  134 	ldh	a, (_LY_REG)
      000083 B9               [ 4]  135 	cp	c
      000084 38 C3            [12]  136 	jr	c, 1$ ; load the next 4 palettes
      000086 FAr02r00         [16]  137 	ld	a, (_STAT_SAVE)
      000089 E0r00            [12]  138 	ldh	(_STAT_REG), a
      00008B AF               [ 4]  139 	xor	a
      00008C E0r00            [12]  140 	ldh	(_IF_REG), a
      00008E 31r00r00         [12]  141 	ld	sp, #_SP_SAVE
      000091 E1               [12]  142 	pop	hl
      000092 F9               [ 8]  143 	ld	sp, hl ; restore SP
      000093 F1               [12]  144 	pop	af
      000094 E0r00            [12]  145 	ldh	(__current_bank), a
      000096 EAr00r00         [16]  146 	ld	(_rROMB0), a
      000099 C9               [16]  147 	ret
                           00009A   148 	C$gbc_hicolor.c$117$1_0$137	= .
                                    149 	.globl	C$gbc_hicolor.c$117$1_0$137
                                    150 ;src/gbc_hicolor.c:117: }
                           00009A   151 	C$gbc_hicolor.c$117$1_0$137	= .
                                    152 	.globl	C$gbc_hicolor.c$117$1_0$137
                           00009A   153 	XG$hicolor_palette_isr$0$0	= .
                                    154 	.globl	XG$hicolor_palette_isr$0$0
      00009A C9               [16]  155 	ret
                           00009B   156 	G$hicolor_start$0$0	= .
                                    157 	.globl	G$hicolor_start$0$0
                           00009B   158 	C$gbc_hicolor.c$125$1_0$139	= .
                                    159 	.globl	C$gbc_hicolor.c$125$1_0$139
                                    160 ;src/gbc_hicolor.c:125: void hicolor_start(const hicolor_data * p_hicolor, uint8_t hicolor_bank) NONBANKED {
                                    161 ;	---------------------------------
                                    162 ; Function hicolor_start
                                    163 ; ---------------------------------
      00009B                        164 _hicolor_start::
      00009B E8 F9            [16]  165 	add	sp, #-7
      00009D 4B               [ 4]  166 	ld	c, e
      00009E 42               [ 4]  167 	ld	b, d
      00009F 5F               [ 4]  168 	ld	e, a
                           0000A0   169 	C$gbc_hicolor.c$129$1_0$139	= .
                                    170 	.globl	C$gbc_hicolor.c$129$1_0$139
                                    171 ;src/gbc_hicolor.c:129: }
      0000A0 F3               [ 4]  172 	di
                           0000A1   173 	C$gbc_hicolor.c$128$2_0$140	= .
                                    174 	.globl	C$gbc_hicolor.c$128$2_0$140
                                    175 ;src/gbc_hicolor.c:128: remove_LCD(hicolor_palette_isr);
      0000A1 C5               [16]  176 	push	bc
      0000A2 D5               [16]  177 	push	de
      0000A3 11r00r00         [12]  178 	ld	de, #_hicolor_palette_isr
      0000A6 CDr00r00         [24]  179 	call	_remove_LCD
      0000A9 D1               [12]  180 	pop	de
      0000AA C1               [12]  181 	pop	bc
      0000AB FB               [ 4]  182 	ei
                           0000AC   183 	C$gbc_hicolor.c$131$1_0$139	= .
                                    184 	.globl	C$gbc_hicolor.c$131$1_0$139
                                    185 ;src/gbc_hicolor.c:131: if (!p_hicolor) return;
      0000AC 78               [ 4]  186 	ld	a, b
      0000AD B1               [ 4]  187 	or	a, c
      0000AE CArC3r01         [16]  188 	jp	Z,00107$
                           0000B1   189 	C$gbc_hicolor.c$132$1_0$139	= .
                                    190 	.globl	C$gbc_hicolor.c$132$1_0$139
                                    191 ;src/gbc_hicolor.c:132: hicolor_palettes_bank = hicolor_bank;
      0000B1 21r05r00         [12]  192 	ld	hl, #_hicolor_palettes_bank
      0000B4 73               [ 8]  193 	ld	(hl), e
                           0000B5   194 	C$gbc_hicolor.c$134$2_0$141	= .
                                    195 	.globl	C$gbc_hicolor.c$134$2_0$141
                                    196 ;src/gbc_hicolor.c:134: uint8_t bank_save = _current_bank;
      0000B5 F0r00            [12]  197 	ldh	a, (__current_bank + 0)
      0000B7 F8 00            [12]  198 	ldhl	sp,	#0
      0000B9 77               [ 8]  199 	ld	(hl), a
                           0000BA   200 	C$gbc_hicolor.c$135$1_1$141	= .
                                    201 	.globl	C$gbc_hicolor.c$135$1_1$141
                                    202 ;src/gbc_hicolor.c:135: if (hicolor_bank) SWITCH_ROM(hicolor_bank);
      0000BA 7B               [ 4]  203 	ld	a, e
      0000BB B7               [ 4]  204 	or	a, a
      0000BC 28 07            [12]  205 	jr	Z, 00104$
      0000BE 7B               [ 4]  206 	ld	a, e
      0000BF E0r00            [12]  207 	ldh	(__current_bank + 0), a
      0000C1 21r00r00         [12]  208 	ld	hl, #_rROMB0
      0000C4 73               [ 8]  209 	ld	(hl), e
      0000C5                        210 00104$:
                           0000C5   211 	C$gbc_hicolor.c$138$1_1$141	= .
                                    212 	.globl	C$gbc_hicolor.c$138$1_1$141
                                    213 ;src/gbc_hicolor.c:138: p_hicolor_palettes = p_hicolor->p_palette;
      0000C5 21 09 00         [12]  214 	ld	hl, #0x0009
      0000C8 09               [ 8]  215 	add	hl, bc
      0000C9 5D               [ 4]  216 	ld	e, l
      0000CA 54               [ 4]  217 	ld	d, h
      0000CB 1A               [ 8]  218 	ld	a, (de)
      0000CC 21r03r00         [12]  219 	ld	hl, #_p_hicolor_palettes
      0000CF 22               [ 8]  220 	ld	(hl+), a
      0000D0 13               [ 8]  221 	inc	de
      0000D1 1A               [ 8]  222 	ld	a, (de)
      0000D2 77               [ 8]  223 	ld	(hl), a
                           0000D3   224 	C$gbc_hicolor.c$141$1_1$141	= .
                                    225 	.globl	C$gbc_hicolor.c$141$1_1$141
                                    226 ;src/gbc_hicolor.c:141: hicolor_last_scanline = (p_hicolor->height_in_tiles > DEVICE_SCREEN_HEIGHT) ? (DEVICE_SCREEN_PX_HEIGHT - 1) : ((p_hicolor->height_in_tiles << 3) - 1);
      0000D3 21 02 00         [12]  227 	ld	hl, #0x0002
      0000D6 09               [ 8]  228 	add	hl, bc
      0000D7 E5               [16]  229 	push	hl
      0000D8 7D               [ 4]  230 	ld	a, l
      0000D9 F8 03            [12]  231 	ldhl	sp,	#3
      0000DB 77               [ 8]  232 	ld	(hl), a
      0000DC E1               [12]  233 	pop	hl
      0000DD 7C               [ 4]  234 	ld	a, h
      0000DE F8 02            [12]  235 	ldhl	sp,	#2
      0000E0 32               [ 8]  236 	ld	(hl-), a
      0000E1 2A               [ 8]  237 	ld	a, (hl+)
      0000E2 5F               [ 4]  238 	ld	e, a
      0000E3 56               [ 8]  239 	ld	d, (hl)
      0000E4 1A               [ 8]  240 	ld	a, (de)
      0000E5 6F               [ 4]  241 	ld	l, a
                                    242 ;	spillPairReg hl
                                    243 ;	spillPairReg hl
      0000E6 3E 12            [ 8]  244 	ld	a, #0x12
      0000E8 95               [ 4]  245 	sub	a, l
      0000E9 30 04            [12]  246 	jr	NC, 00109$
      0000EB 3E 8F            [ 8]  247 	ld	a, #0x8f
      0000ED 18 05            [12]  248 	jr	00110$
      0000EF                        249 00109$:
      0000EF 7D               [ 4]  250 	ld	a, l
      0000F0 87               [ 4]  251 	add	a, a
      0000F1 87               [ 4]  252 	add	a, a
      0000F2 87               [ 4]  253 	add	a, a
      0000F3 3D               [ 4]  254 	dec	a
      0000F4                        255 00110$:
      0000F4 EAr06r00         [16]  256 	ld	(#_hicolor_last_scanline),a
                           0000F7   257 	C$gbc_hicolor.c$144$1_1$141	= .
                                    258 	.globl	C$gbc_hicolor.c$144$1_1$141
                                    259 ;src/gbc_hicolor.c:144: VBK_REG = VBK_BANK_0;
      0000F7 AF               [ 4]  260 	xor	a, a
      0000F8 E0r00            [12]  261 	ldh	(_VBK_REG + 0), a
                           0000FA   262 	C$gbc_hicolor.c$145$1_1$141	= .
                                    263 	.globl	C$gbc_hicolor.c$145$1_1$141
                                    264 ;src/gbc_hicolor.c:145: set_bkg_data(0u, MIN(p_hicolor->tile_count, 256), p_hicolor->p_tiles);
      0000FA 21 03 00         [12]  265 	ld	hl, #0x0003
      0000FD 09               [ 8]  266 	add	hl, bc
      0000FE E5               [16]  267 	push	hl
      0000FF 7D               [ 4]  268 	ld	a, l
      000100 F8 05            [12]  269 	ldhl	sp,	#5
      000102 77               [ 8]  270 	ld	(hl), a
      000103 E1               [12]  271 	pop	hl
      000104 7C               [ 4]  272 	ld	a, h
      000105 F8 04            [12]  273 	ldhl	sp,	#4
      000107 32               [ 8]  274 	ld	(hl-), a
      000108 2A               [ 8]  275 	ld	a, (hl+)
      000109 5F               [ 4]  276 	ld	e, a
      00010A 2A               [ 8]  277 	ld	a, (hl+)
      00010B 57               [ 4]  278 	ld	d, a
      00010C 1A               [ 8]  279 	ld	a, (de)
      00010D 22               [ 8]  280 	ld	(hl+), a
      00010E 13               [ 8]  281 	inc	de
      00010F 1A               [ 8]  282 	ld	a, (de)
      000110 77               [ 8]  283 	ld	(hl), a
      000111 69               [ 4]  284 	ld	l, c
      000112 60               [ 4]  285 	ld	h, b
      000113 23               [ 8]  286 	inc	hl
      000114 3A               [ 8]  287 	ld	a,	(hl-)
                                    288 ;	spillPairReg hl
      000115 5E               [ 8]  289 	ld	e, (hl)
      000116 D6 01            [ 8]  290 	sub	a, #0x01
      000118 38 03            [12]  291 	jr	C, 00112$
      00011A 11 00 01         [12]  292 	ld	de, #0x0100
      00011D                        293 00112$:
      00011D 7B               [ 4]  294 	ld	a, e
      00011E F8 05            [12]  295 	ldhl	sp,	#5
      000120 5E               [ 8]  296 	ld	e, (hl)
      000121 23               [ 8]  297 	inc	hl
      000122 56               [ 8]  298 	ld	d, (hl)
      000123 D5               [16]  299 	push	de
      000124 67               [ 4]  300 	ld	h, a
      000125 2E 00            [ 8]  301 	ld	l, #0x00
      000127 E5               [16]  302 	push	hl
      000128 CDr00r00         [24]  303 	call	_set_bkg_data
      00012B E8 04            [16]  304 	add	sp, #4
                           00012D   305 	C$gbc_hicolor.c$146$1_1$141	= .
                                    306 	.globl	C$gbc_hicolor.c$146$1_1$141
                                    307 ;src/gbc_hicolor.c:146: set_bkg_tiles(0u, 0u, DEVICE_SCREEN_WIDTH, p_hicolor->height_in_tiles, p_hicolor->p_map);
      00012D 21 05 00         [12]  308 	ld	hl, #0x0005
      000130 09               [ 8]  309 	add	hl, bc
      000131 5D               [ 4]  310 	ld	e, l
      000132 54               [ 4]  311 	ld	d, h
      000133 1A               [ 8]  312 	ld	a, (de)
      000134 F8 05            [12]  313 	ldhl	sp,	#5
      000136 22               [ 8]  314 	ld	(hl+), a
      000137 13               [ 8]  315 	inc	de
      000138 1A               [ 8]  316 	ld	a, (de)
      000139 77               [ 8]  317 	ld	(hl), a
      00013A F8 01            [12]  318 	ldhl	sp,#1
      00013C 2A               [ 8]  319 	ld	a, (hl+)
      00013D 5F               [ 4]  320 	ld	e, a
      00013E 56               [ 8]  321 	ld	d, (hl)
      00013F 1A               [ 8]  322 	ld	a, (de)
      000140 F8 05            [12]  323 	ldhl	sp,	#5
      000142 5E               [ 8]  324 	ld	e, (hl)
      000143 23               [ 8]  325 	inc	hl
      000144 56               [ 8]  326 	ld	d, (hl)
      000145 D5               [16]  327 	push	de
      000146 67               [ 4]  328 	ld	h, a
      000147 2E 14            [ 8]  329 	ld	l, #0x14
      000149 E5               [16]  330 	push	hl
      00014A AF               [ 4]  331 	xor	a, a
      00014B 0F               [ 4]  332 	rrca
      00014C F5               [16]  333 	push	af
      00014D CDr00r00         [24]  334 	call	_set_bkg_tiles
      000150 E8 06            [16]  335 	add	sp, #6
                           000152   336 	C$gbc_hicolor.c$149$1_1$141	= .
                                    337 	.globl	C$gbc_hicolor.c$149$1_1$141
                                    338 ;src/gbc_hicolor.c:149: VBK_REG = VBK_BANK_1;
      000152 3E 01            [ 8]  339 	ld	a, #0x01
      000154 E0r00            [12]  340 	ldh	(_VBK_REG + 0), a
                           000156   341 	C$gbc_hicolor.c$150$1_1$141	= .
                                    342 	.globl	C$gbc_hicolor.c$150$1_1$141
                                    343 ;src/gbc_hicolor.c:150: if (p_hicolor->tile_count > 256) set_bkg_data(0u, (p_hicolor->tile_count - 256), p_hicolor->p_tiles + (256 * 16));
      000156 59               [ 4]  344 	ld	e, c
      000157 50               [ 4]  345 	ld	d, b
      000158 1A               [ 8]  346 	ld	a, (de)
      000159 F8 05            [12]  347 	ldhl	sp,	#5
      00015B 22               [ 8]  348 	ld	(hl+), a
      00015C 13               [ 8]  349 	inc	de
      00015D 1A               [ 8]  350 	ld	a, (de)
      00015E 32               [ 8]  351 	ld	(hl-), a
      00015F 2A               [ 8]  352 	ld	a, (hl+)
      000160 5F               [ 4]  353 	ld	e, a
      000161 56               [ 8]  354 	ld	d, (hl)
      000162 AF               [ 4]  355 	xor	a, a
      000163 BB               [ 4]  356 	cp	a, e
      000164 3E 01            [ 8]  357 	ld	a, #0x01
      000166 9A               [ 4]  358 	sbc	a, d
      000167 30 1B            [12]  359 	jr	NC, 00106$
      000169 2B               [ 8]  360 	dec	hl
      00016A 2B               [ 8]  361 	dec	hl
      00016B 2B               [ 8]  362 	dec	hl
      00016C 2A               [ 8]  363 	ld	a, (hl+)
      00016D 5F               [ 4]  364 	ld	e, a
      00016E 56               [ 8]  365 	ld	d, (hl)
      00016F 1A               [ 8]  366 	ld	a, (de)
      000170 6F               [ 4]  367 	ld	l, a
                                    368 ;	spillPairReg hl
                                    369 ;	spillPairReg hl
      000171 13               [ 8]  370 	inc	de
      000172 1A               [ 8]  371 	ld	a, (de)
                                    372 ;	spillPairReg hl
                                    373 ;	spillPairReg hl
      000173 5D               [ 4]  374 	ld	e, l
      000174 C6 10            [ 8]  375 	add	a, #0x10
      000176 57               [ 4]  376 	ld	d, a
      000177 F8 05            [12]  377 	ldhl	sp,	#5
      000179 7E               [ 8]  378 	ld	a, (hl)
      00017A D5               [16]  379 	push	de
      00017B 67               [ 4]  380 	ld	h, a
      00017C 2E 00            [ 8]  381 	ld	l, #0x00
      00017E E5               [16]  382 	push	hl
      00017F CDr00r00         [24]  383 	call	_set_bkg_data
      000182 E8 04            [16]  384 	add	sp, #4
      000184                        385 00106$:
                           000184   386 	C$gbc_hicolor.c$151$1_1$141	= .
                                    387 	.globl	C$gbc_hicolor.c$151$1_1$141
                                    388 ;src/gbc_hicolor.c:151: set_bkg_tiles(0, 0, DEVICE_SCREEN_WIDTH, p_hicolor->height_in_tiles, p_hicolor->p_attribute_map);
      000184 21 07 00         [12]  389 	ld	hl, #0x0007
      000187 09               [ 8]  390 	add	hl, bc
      000188 2A               [ 8]  391 	ld	a, (hl+)
      000189 4F               [ 4]  392 	ld	c, a
      00018A 46               [ 8]  393 	ld	b, (hl)
      00018B F8 01            [12]  394 	ldhl	sp,#1
      00018D 2A               [ 8]  395 	ld	a, (hl+)
      00018E 5F               [ 4]  396 	ld	e, a
      00018F 56               [ 8]  397 	ld	d, (hl)
      000190 1A               [ 8]  398 	ld	a, (de)
      000191 C5               [16]  399 	push	bc
      000192 67               [ 4]  400 	ld	h, a
      000193 2E 14            [ 8]  401 	ld	l, #0x14
      000195 E5               [16]  402 	push	hl
      000196 AF               [ 4]  403 	xor	a, a
      000197 0F               [ 4]  404 	rrca
      000198 F5               [16]  405 	push	af
      000199 CDr00r00         [24]  406 	call	_set_bkg_tiles
      00019C E8 06            [16]  407 	add	sp, #6
                           00019E   408 	C$gbc_hicolor.c$152$1_1$141	= .
                                    409 	.globl	C$gbc_hicolor.c$152$1_1$141
                                    410 ;src/gbc_hicolor.c:152: VBK_REG = VBK_BANK_0;
      00019E AF               [ 4]  411 	xor	a, a
      00019F E0r00            [12]  412 	ldh	(_VBK_REG + 0), a
                           0001A1   413 	C$gbc_hicolor.c$154$1_1$141	= .
                                    414 	.globl	C$gbc_hicolor.c$154$1_1$141
                                    415 ;src/gbc_hicolor.c:154: SWITCH_ROM(bank_save);
      0001A1 F8 00            [12]  416 	ldhl	sp,	#0
      0001A3 7E               [ 8]  417 	ld	a, (hl)
      0001A4 E0r00            [12]  418 	ldh	(__current_bank + 0), a
      0001A6 7E               [ 8]  419 	ld	a, (hl)
      0001A7 EAr00r00         [16]  420 	ld	(#_rROMB0),a
                           0001AA   421 	C$gbc_hicolor.c$162$1_1$141	= .
                                    422 	.globl	C$gbc_hicolor.c$162$1_1$141
                                    423 ;src/gbc_hicolor.c:162: }
      0001AA F3               [ 4]  424 	di
                           0001AB   425 	C$gbc_hicolor.c$158$2_1$142	= .
                                    426 	.globl	C$gbc_hicolor.c$158$2_1$142
                                    427 ;src/gbc_hicolor.c:158: LYC_REG = 152;
      0001AB 3E 98            [ 8]  428 	ld	a, #0x98
      0001AD E0r00            [12]  429 	ldh	(_LYC_REG + 0), a
                           0001AF   430 	C$gbc_hicolor.c$159$2_1$142	= .
                                    431 	.globl	C$gbc_hicolor.c$159$2_1$142
                                    432 ;src/gbc_hicolor.c:159: STAT_REG = STATF_LYC;
      0001AF 3E 40            [ 8]  433 	ld	a, #0x40
      0001B1 E0r00            [12]  434 	ldh	(_STAT_REG + 0), a
                           0001B3   435 	C$gbc_hicolor.c$161$2_1$142	= .
                                    436 	.globl	C$gbc_hicolor.c$161$2_1$142
                                    437 ;src/gbc_hicolor.c:161: add_LCD(hicolor_palette_isr);
      0001B3 11r00r00         [12]  438 	ld	de, #_hicolor_palette_isr
      0001B6 CDr00r00         [24]  439 	call	_add_LCD
      0001B9 FB               [ 4]  440 	ei
                           0001BA   441 	C$gbc_hicolor.c$163$1_1$141	= .
                                    442 	.globl	C$gbc_hicolor.c$163$1_1$141
                                    443 ;src/gbc_hicolor.c:163: set_interrupts(IE_REG | LCD_IFLAG);
      0001BA F0r00            [12]  444 	ldh	a, (_IE_REG + 0)
      0001BC 4F               [ 4]  445 	ld	c, a
      0001BD CB C9            [ 8]  446 	set	1, c
      0001BF 79               [ 4]  447 	ld	a, c
      0001C0 CDr00r00         [24]  448 	call	_set_interrupts
      0001C3                        449 00107$:
                           0001C3   450 	C$gbc_hicolor.c$164$1_1$139	= .
                                    451 	.globl	C$gbc_hicolor.c$164$1_1$139
                                    452 ;src/gbc_hicolor.c:164: }
      0001C3 E8 07            [16]  453 	add	sp, #7
                           0001C5   454 	C$gbc_hicolor.c$164$1_1$139	= .
                                    455 	.globl	C$gbc_hicolor.c$164$1_1$139
                           0001C5   456 	XG$hicolor_start$0$0	= .
                                    457 	.globl	XG$hicolor_start$0$0
      0001C5 C9               [16]  458 	ret
                                    459 	.area _HOME
                                    460 ;--------------------------------------------------------
                                    461 ; code
                                    462 ;--------------------------------------------------------
                                    463 	.area _CODE
                                    464 	.area _CODE
                                    465 	.area _INITIALIZER
                                    466 	.area _CABS (ABS)
